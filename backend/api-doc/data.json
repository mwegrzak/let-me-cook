{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "info": {
    "description": "Let me cook API",
    "version": "1.0.6-SNAPSHOT",
    "title": "Let me cook",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/api/recipe/": {
      "get": {
        "operationId": "getRecipe",
        "description": "Retrieve a list of all recipes",
        "tags": [
          "Recipe"
        ],
        "responses": {
          "200": {
            "description": "A list of recipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipe"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postRecipe",
        "description": "Create a new recipe",
        "tags": [
          "Recipe"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          }
        }
      }
    },
    "/api/recipe/{id}": {
      "get": {
        "operationId": "getRecipeId",
        "description": "Retrieve a specific recipe by ID",
        "tags": [
          "Recipe"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      },
      "put": {
        "operationId": "putRecipeId",
        "description": "Update a recipe by ID",
        "tags": [
          "Recipe"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recipe updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      },
      "delete": {
        "operationId": "deleteRecipeId",
        "description": "Delete a recipe by ID",
        "tags": [
          "Recipe"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Recipe deleted successfully"
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "operationId": "postApiAuthRegister",
        "description": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "postApiAuthLogin",
        "description": "Log in a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "postApiAuthLogout",
        "description": "Log out the current user",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/api/auth/passwordreset": {
      "post": {
        "operationId": "postApiAuthPasswordreset",
        "description": "Request password reset",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset link sent"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/auth/passwordreset/{token}": {
      "post": {
        "operationId": "postApiAuthPasswordresetToken",
        "description": "Reset password using token",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid token or request data"
          }
        }
      }
    },
    "/api/auth/check": {
      "get": {
        "operationId": "getApiAuthCheck",
        "description": "Check user authentication status",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "User is authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthStatus"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Recipe": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "ingredients": {
            "type": "string"
          },
          "steps": {
            "type": "string"
          },
          "difficulty": {
            "type": "integer"
          },
          "time": {
            "type": "integer"
          }
        }
      },
      "RecipeCreate": {
        "type": "object",
        "required": [
          "name",
          "description",
          "ingredients",
          "steps",
          "difficulty",
          "time"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "ingredients": {
            "type": "string"
          },
          "steps": {
            "type": "string"
          },
          "difficulty": {
            "type": "integer"
          },
          "time": {
            "type": "integer"
          }
        }
      },
      "RecipeUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "ingredients": {
            "type": "string"
          },
          "steps": {
            "type": "string"
          },
          "difficulty": {
            "type": "integer"
          },
          "time": {
            "type": "integer"
          }
        }
      },
      "AuthRegister": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      },
      "AuthLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "PasswordResetRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "PasswordReset": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "minLength": 8
          }
        },
        "required": [
          "password"
        ]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "AuthStatus": {
        "type": "object",
        "properties": {
          "authenticated": {
            "type": "boolean"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      }
    }
  }
}